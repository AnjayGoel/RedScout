name: Go

on:
  push:
    branches: [ "main", "master" ]

jobs:
  build:
    if: contains(github.event.head_commit.message, '#deploy')
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24.2'

      - name: Set up release version
        id: vars
        run: echo "VERSION=$(date +v%Y.%m.%d)" >> $GITHUB_OUTPUT

      - name: Build binaries
        run: |
          mkdir -p dist
          GOOS=linux GOARCH=amd64 go build -o dist/app-linux-amd64
          GOOS=darwin GOARCH=amd64 go build -o dist/app-darwin-amd64
          GOOS=windows GOARCH=amd64 go build -o dist/app-windows-amd64.exe

      - name: Create Git tag
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git tag ${{ steps.vars.outputs.VERSION }}
          git push origin ${{ steps.vars.outputs.VERSION }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.vars.outputs.VERSION }}
          name: Release ${{ steps.vars.outputs.VERSION }}
          generate_release_notes: true
          files: |
            dist/app-linux-amd64
            dist/app-darwin-amd64
            dist/app-windows-amd64.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
